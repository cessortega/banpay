// Mocks generated by Mockito 5.4.4 from annotations
// in banpay/test/test_utils/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:banpay/api/repository/pokemon_detail/model/pokemon_detail_response.dart'
    as _i7;
import 'package:banpay/api/repository/pokemon_detail/pokemon_detail_repository.dart'
    as _i12;
import 'package:banpay/api/repository/pokemon_favorite/model/pokemon_favorite_hive.dart'
    as _i10;
import 'package:banpay/api/repository/pokemon_favorite/pokemon_favorite_storage.dart'
    as _i8;
import 'package:banpay/api/repository/pokemons/model/pokemons_response.dart'
    as _i5;
import 'package:banpay/api/repository/pokemons/pokemons_repository.dart'
    as _i11;
import 'package:banpay/common/result.dart' as _i2;
import 'package:banpay/common/use_case/pokemon_detail_use_case.dart' as _i6;
import 'package:banpay/common/use_case/pokemon_favorite_use_case.dart' as _i13;
import 'package:banpay/common/use_case/pokemons_use_case.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonsUseCase extends _i1.Mock implements _i3.PokemonsUseCase {
  @override
  _i4.Future<_i2.Result<_i5.PokemonsResponse>> call({
    int? limit = 30,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i4.Future<_i2.Result<_i5.PokemonsResponse>>.value(
            _FakeResult_0<_i5.PokemonsResponse>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i5.PokemonsResponse>>.value(
                _FakeResult_0<_i5.PokemonsResponse>(
          this,
          Invocation.method(
            #call,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.PokemonsResponse>>);
}

/// A class which mocks [PokemonDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonDetailUseCase extends _i1.Mock
    implements _i6.PokemonDetailUseCase {
  @override
  _i4.Future<_i2.Result<_i7.PokemonDetailResponse>> call(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [name],
        ),
        returnValue: _i4.Future<_i2.Result<_i7.PokemonDetailResponse>>.value(
            _FakeResult_0<_i7.PokemonDetailResponse>(
          this,
          Invocation.method(
            #call,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i7.PokemonDetailResponse>>.value(
                _FakeResult_0<_i7.PokemonDetailResponse>(
          this,
          Invocation.method(
            #call,
            [name],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i7.PokemonDetailResponse>>);
}

/// A class which mocks [PokemonFavoriteStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonFavoriteStorage extends _i1.Mock
    implements _i8.PokemonFavoriteStorage {
  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i9.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.Result<_i2.EmptyContent>> save(
          _i10.PokemonFavoriteHive? pokemon) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [pokemon],
        ),
        returnValue: _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
            _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #save,
            [pokemon],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
                _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #save,
            [pokemon],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i2.EmptyContent>>);

  @override
  _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>> getAll() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>>.value(
                _FakeResult_0<List<_i10.PokemonFavoriteHive>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>>.value(
                _FakeResult_0<List<_i10.PokemonFavoriteHive>>(
          this,
          Invocation.method(
            #getAll,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>>);

  @override
  _i4.Future<_i2.Result<_i2.EmptyContent>> deleteById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteById,
          [id],
        ),
        returnValue: _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
            _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #deleteById,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
                _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #deleteById,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i2.EmptyContent>>);

  @override
  _i4.Future<bool> isFavorite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Result<_i2.EmptyContent>> delete() => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
            _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
                _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #delete,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i2.EmptyContent>>);
}

/// A class which mocks [PokemonsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonsRepository extends _i1.Mock
    implements _i11.PokemonsRepository {
  @override
  _i4.Future<_i2.Result<_i5.PokemonsResponse>> getPokemons({
    int? limit = 30,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemons,
          [],
          {
            #limit: limit,
            #offset: offset,
          },
        ),
        returnValue: _i4.Future<_i2.Result<_i5.PokemonsResponse>>.value(
            _FakeResult_0<_i5.PokemonsResponse>(
          this,
          Invocation.method(
            #getPokemons,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i5.PokemonsResponse>>.value(
                _FakeResult_0<_i5.PokemonsResponse>(
          this,
          Invocation.method(
            #getPokemons,
            [],
            {
              #limit: limit,
              #offset: offset,
            },
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.PokemonsResponse>>);

  @override
  _i4.Future<_i2.Result<T>> handleResult<T>(
          _i4.Future<_i2.Result<T>> Function()? doRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResult,
          [doRequest],
        ),
        returnValue: _i4.Future<_i2.Result<T>>.value(_FakeResult_0<T>(
          this,
          Invocation.method(
            #handleResult,
            [doRequest],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<T>>.value(_FakeResult_0<T>(
          this,
          Invocation.method(
            #handleResult,
            [doRequest],
          ),
        )),
      ) as _i4.Future<_i2.Result<T>>);
}

/// A class which mocks [PokemonDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonDetailRepository extends _i1.Mock
    implements _i12.PokemonDetailRepository {
  @override
  _i4.Future<_i2.Result<_i7.PokemonDetailResponse>> getDetail(String? name) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [name],
        ),
        returnValue: _i4.Future<_i2.Result<_i7.PokemonDetailResponse>>.value(
            _FakeResult_0<_i7.PokemonDetailResponse>(
          this,
          Invocation.method(
            #getDetail,
            [name],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i7.PokemonDetailResponse>>.value(
                _FakeResult_0<_i7.PokemonDetailResponse>(
          this,
          Invocation.method(
            #getDetail,
            [name],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i7.PokemonDetailResponse>>);

  @override
  _i4.Future<_i2.Result<T>> handleResult<T>(
          _i4.Future<_i2.Result<T>> Function()? doRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResult,
          [doRequest],
        ),
        returnValue: _i4.Future<_i2.Result<T>>.value(_FakeResult_0<T>(
          this,
          Invocation.method(
            #handleResult,
            [doRequest],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<T>>.value(_FakeResult_0<T>(
          this,
          Invocation.method(
            #handleResult,
            [doRequest],
          ),
        )),
      ) as _i4.Future<_i2.Result<T>>);
}

/// A class which mocks [PokemonFavoriteUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonFavoriteUseCase extends _i1.Mock
    implements _i13.PokemonFavoriteUseCase {
  @override
  _i4.Future<_i2.Result<_i2.EmptyContent>> addFavorite(
          _i10.PokemonFavoriteHive? pokemon) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [pokemon],
        ),
        returnValue: _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
            _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #addFavorite,
            [pokemon],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
                _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #addFavorite,
            [pokemon],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i2.EmptyContent>>);

  @override
  _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>> getFavorites() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavorites,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>>.value(
                _FakeResult_0<List<_i10.PokemonFavoriteHive>>(
          this,
          Invocation.method(
            #getFavorites,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>>.value(
                _FakeResult_0<List<_i10.PokemonFavoriteHive>>(
          this,
          Invocation.method(
            #getFavorites,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i10.PokemonFavoriteHive>>>);

  @override
  _i4.Future<_i2.Result<_i2.EmptyContent>> removeFavorite(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [id],
        ),
        returnValue: _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
            _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #removeFavorite,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
                _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #removeFavorite,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i2.EmptyContent>>);

  @override
  _i4.Future<bool> isFavorite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #isFavorite,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
        returnValueForMissingStub: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Result<_i2.EmptyContent>> clearFavorites() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearFavorites,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
            _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #clearFavorites,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Result<_i2.EmptyContent>>.value(
                _FakeResult_0<_i2.EmptyContent>(
          this,
          Invocation.method(
            #clearFavorites,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i2.EmptyContent>>);
}
